/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[3]!./assets/styles/app.scss ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
html {
  scroll-behavior: smooth;
}

body {
  font-size: 16px;
  background-color: #fff;
}

h2 {
  font-size: 2rem;
  font-weight: 600;
}

h3 {
  font-size: 1.1rem;
}

h4 {
  font-size: 1rem;
  font-weight: 600;
}

.btn-primary {
  background-color: #ea671a;
  border-color: #ea671a;
}

.btn-secondary {
  background-color: #92A721;
  border-color: #92A721;
}

.spaced {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.divider {
  margin: 3rem 0;
  border-top: 1px solid #bbb;
}

a {
  color: #92A721;
}

#hero {
  /* Use "linear-gradient" to add a darken background effect to the image (photographer.jpg). This will make the text easier to read */
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
  /* Set a specific height */
  height: 50vh;
  max-height: 450px;
  /* Position and center the image to scale nicely on all screens */
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
  /*p {
      @include media-breakpoint-down(lg) {
          font-size: 18px;
      }

      @include media-breakpoint-down(md) {
          font-size: 14px;
      }

      @include media-breakpoint-down(sm) {
          font-size: 12px;
      }

  }*/
}
#hero #logo {
  min-width: 100px;
  width: 12vw;
}
#hero .hero-content {
  position: absolute;
  bottom: 5%;
  left: 0;
  width: 100%;
  color: white;
}
#hero .hero-content h1,
#hero .hero-content h2 {
  margin: 0;
  background-color: #ea671a;
  padding: 5px 11px;
  color: #fff;
  display: inline-block;
}
#hero .hero-content h1 {
  border-bottom: 3px solid #fff;
}
#hero .hero-content h2 {
  background-color: #92A721;
}
#hero .hero-content .topic {
  border-left: 3px solid #ea671a;
}
#hero .hero-content .topic h2 {
  font-size: 1rem;
  text-transform: uppercase;
}
#hero .hero-content .topic p {
  margin: 0;
  font-size: 0.8rem;
}

footer {
  color: #fff;
}
footer .content {
  background-color: #646464;
}
footer .codex-logo {
  height: 100px;
  width: auto;
}
footer a {
  color: #fff;
}
footer a:hover {
  color: #92A721;
  text-decoration: none;
}

.border-cd-orange {
  border-color: #ea671a !important;
}

#social-bar {
  position: fixed;
  z-index: 10000;
  left: 2px;
  top: 20vh;
  width: 50px;
}
#social-bar a {
  display: block;
  border-bottom: 1px solid #fff;
  width: 40px;
  height: 40px;
  background-color: #ea671a;
  color: #fff;
  line-height: 40px;
  text-align: center;
}
#social-bar a:last-child {
  border: none;
}
#social-bar a:hover {
  background-color: #92A721;
}
#social-bar a img {
  width: 25px;
  height: auto;
  fill: #fff;
}
#social-bar a .material-icons {
  margin-top: 0.5rem;
}

.post-list-item h2 {
  margin-bottom: 1.5rem;
}
.post-list-item h3 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  font-size: 1rem;
  font-weight: 700;
}
.post-list-item:hover {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.25) !important;
}

.material-icons {
  vertical-align: bottom;
}

.blogpost-content-gallery img:hover {
  cursor: pointer;
}

#bbx-gallery-slideout {
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100%;
  text-align: center;
  background-color: #333;
  color: #fff;
  padding: 20px;
  transition: transform 0.3s linear;
  transform: translate3d(100vw, 0, 0);
  overflow-y: scroll;
  z-index: 1100;
}
#bbx-gallery-slideout.show {
  transform: translate3d(0, 0, 0);
}
#bbx-gallery-slideout.hide {
  transform: translate3d(100vw, 0, 0);
}
#bbx-gallery-slideout #bbx-gallery-control {
  padding-bottom: 10px;
  width: 100%;
}
#bbx-gallery-slideout #bbx-gallery-control #bbx-gallery-close {
  display: inline-block;
  padding: 2px 9px;
  border: 1px solid #fff;
  border-radius: 50%;
  background-color: #333;
  cursor: pointer;
}
#bbx-gallery-slideout .img-wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 10px 0;
  position: relative;
}
#bbx-gallery-slideout .img-wrap.loading {
  background-color: #383838;
  padding: 30px;
}
#bbx-gallery-slideout .img-wrap .counter {
  position: absolute;
  bottom: 15px;
  background-color: #333;
  color: #fff;
  border-radius: 3px;
  text-align: center;
  opacity: 0.8;
  padding: 0 5px;
}
#bbx-gallery-slideout .img-wrap img.full {
  max-width: 100%;
}

#page-home #hero {
  height: 270vh;
  max-height: 700px;
  background-position: center bottom;
}
#page-home #hero .hero-content {
  bottom: 5%;
}
#page-home #intro .container {
  padding-top: 60px;
  padding-bottom: 30px;
  line-height: 2em;
  border-bottom: 1px dotted #ea671a;
}
#page-home #intro .container strong {
  color: #92A721;
}
#page-home #sets .set {
  text-align: center;
}
#page-home #sets .set h3 {
  margin: 15px 0;
  padding: 5px 3px;
  background-color: #ea671a;
  color: #fff;
  border-radius: 5px;
  text-transform: uppercase;
  font-weight: 600;
}

.page-blogpost #title h1,
.page-blogpost #title h2 {
  margin: 0;
  background-color: #ea671a;
  padding: 5px 11px;
  color: #fff;
  display: inline-block;
}
.page-blogpost #title h1 {
  border-bottom: 3px solid #fff;
}
.page-blogpost #title h2 {
  background-color: #92A721;
}
.page-blogpost .links-downloads tr {
  vertical-align: top;
}
.page-blogpost .links-downloads tr td:first-child {
  padding-right: 10px;
}
.page-blogpost .author .bi {
  padding-right: 10px;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/